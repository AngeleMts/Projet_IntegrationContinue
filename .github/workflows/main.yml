name: Main workflow
on: [ push ]
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM dependencies
        run: |
          npm install

      - name: Run backend tests
        run: |
          npm run test

  docker-image:
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/moodrt:${{ steps.extract_branch.outputs.branch }}

  app-tests:
    runs-on: ubuntu-latest
    needs:
      - docker-image
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Run test docker image
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/moodrt:${{ steps.extract_branch.outputs.branch }}
          id: moodrt-container
          shell: bash
          run: |
            bash startup.sh &
            if [ $(curl -I http://127.0.0.1:8080 2>/dev/null | head -n 1 | cut -d$' ' -f2) -ne 200 ]; then echo "Frontend server error" && exit 1; fi
            if [ $(curl -I http://127.0.0.1:3000 2>/dev/null | head -n 1 | cut -d$' ' -f2) -ne 404 ]; then echo "Backend server error" && exit 1; fi
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - app-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ steps.extract_branch.outputs.branch }}-${{ steps.vars.outputs.sha_short }}"
          release_name: Release ${{ steps.extract_branch.outputs.branch }}-${{ steps.vars.outputs.sha_short }}"
          draft: false
          prerelease: false